[{"categories":["ethereum"],"content":"Introduction简介 I once came across a video on YouTube which was named “How I earned BNB using Flashloans to Arbitrage on Binance Smartchain BSC”. The title was quite catchy because everyone who followed the crypto field in the beginning of 2021 was aware of Binance Smart Chain (BSC), which is a clone of Ethereum, and definitely heard about multiple attacks on DeFi projects running on this blockchain. ","date":"2021-11-27","objectID":"/posts/analysis-of-a-technical-smart-contract-scam/:1:0","tags":["translate","ethereum"],"title":"Analysis of a technical smart contract scam-智能合约骗局剖析","uri":"/posts/analysis-of-a-technical-smart-contract-scam/"},{"categories":["ethereum"],"content":"搭建以太坊联盟链 ","date":"2019-09-05","objectID":"/posts/geth-poa%E8%81%94%E7%9B%9F%E9%93%BE%E6%90%AD%E5%BB%BA/:1:0","tags":["deploy","geth"],"title":"Geth POA联盟链搭建","uri":"/posts/geth-poa%E8%81%94%E7%9B%9F%E9%93%BE%E6%90%AD%E5%BB%BA/"},{"categories":["ethereum"],"content":"创建节点目录 [root@google01 private-POA-chian]# mkdir node-1 node-2 node-3 [root@google01 private-POA-chian]# ls node-1 node-2 node-3 ","date":"2019-09-05","objectID":"/posts/geth-poa%E8%81%94%E7%9B%9F%E9%93%BE%E6%90%AD%E5%BB%BA/:1:1","tags":["deploy","geth"],"title":"Geth POA联盟链搭建","uri":"/posts/geth-poa%E8%81%94%E7%9B%9F%E9%93%BE%E6%90%AD%E5%BB%BA/"},{"categories":["ethereum"],"content":"新建账户 [root@google01 private-POA-chian]# geth --datadir ./node-1/data account new [root@google01 private-POA-chian]# geth --datadir ./node-2/data account new [root@google01 private-POA-chian]# geth --datadir ./node-3/data account new 创建的地址 node-1：88b34c24E8F727b44C17065A26B76Bc31CF2c029 node-2：241f173D632C57773B552953Fe1f2821d24BE072 node-3：Aae8AD28560E70f81815ff5B5AD9d65dC4E7Ca22 ","date":"2019-09-05","objectID":"/posts/geth-poa%E8%81%94%E7%9B%9F%E9%93%BE%E6%90%AD%E5%BB%BA/:1:2","tags":["deploy","geth"],"title":"Geth POA联盟链搭建","uri":"/posts/geth-poa%E8%81%94%E7%9B%9F%E9%93%BE%E6%90%AD%E5%BB%BA/"},{"categories":["ethereum"],"content":"puppeth初始化区块 输入链名称 [root@google01 private-POA-chian]# puppeth +-----------------------------------------------------------+ | Welcome to puppeth, your Ethereum private network manager | | | | This tool lets you create a new Ethereum network down to | | the genesis block, bootnodes, miners and ethstats servers | | without the hassle that it would normally entail. | | | | Puppeth uses SSH to dial in to remote servers, and builds | | its network components out of Docker containers using the | | docker-compose toolset. | +-----------------------------------------------------------+ Please specify a network name to administer (no spaces, hyphens or capital letters please) \u003e test Sweet, you can set this via --network=test next time! INFO [11-26|14:35:42.756] Administering Ethereum network name=test WARN [11-26|14:35:42.756] No previous configurations found path=/root/.puppeth/test 新建区块-\u003e选择POA算法-\u003e出块时间10秒 What would you like to do? (default = stats) 1. Show network stats 2. Configure new genesis 3. Track new remote server 4. Deploy network components \u003e 2 What would you like to do? (default = create) 1. Create new genesis from scratch 2. Import already existing genesis \u003e 1 Which consensus engine to use? (default = clique) 1. Ethash - proof-of-work 2. Clique - proof-of-authority \u003e 2 How many seconds should blocks take? (default = 15) \u003e 10 选择密封块账户 Which accounts are allowed to seal? (mandatory at least one) \u003e 0x88b34c24E8F727b44C17065A26B76Bc31CF2c029 \u003e 0x241f173D632C57773B552953Fe1f2821d24BE072 \u003e 0xAae8AD28560E70f81815ff5B5AD9d65dC4E7Ca22 至于什么是seal a block可以参考stackexchange的回答https://ethereum.stackexchange.com/questions/6093/what-does-it-mean-to-seal-a-block 选择区块奖励账户 Which accounts should be pre-funded? (advisable at least one) \u003e 0x88b34c24E8F727b44C17065A26B76Bc31CF2c029 \u003e 0x241f173D632C57773B552953Fe1f2821d24BE072 \u003e 0xAae8AD28560E70f81815ff5B5AD9d65dC4E7Ca22 设置预编译地址奖励及链ID Should the precompile-addresses (0x1 .. 0xff) be pre-funded with 1 wei? (advisable yes) \u003e yes Specify your chain/network ID if you want an explicit one (default = random) \u003e 15 预编译地址的用处https://ethereum.stackexchange.com/questions/68056/puppeth-precompile-addresses “When running sha256, ripemd160 or ecrecover on a private blockchain, you might encounter Out-of-Gas. This is because these functions are implemented as “precompiled contracts” and only really exist after they receive the first message (although their contract code is hardcoded). Messages to non-existing contracts are more expensive and thus the execution might run into an Out-of-Gas error. A workaround for this problem is to first send Wei (1 for example) to each of the contracts before you use them in your actual contracts. This is not an issue on the main or test net.” 导出配置 What would you like to do? (default = stats) 1. Show network stats 2. Manage existing genesis 3. Track new remote server 4. Deploy network components \u003e 2 1. Modify existing configurations 2. Export genesis configurations 3. Remove genesis configuration \u003e 2 Which folder to save the genesis specs into? (default = current) Will create test.json, test-aleth.json, test-harmony.json, test-parity.json \u003e INFO [11-26|14:59:18.889] Saved native genesis chain spec path=test.json ERROR[11-26|14:59:18.889] Failed to create Aleth chain spec err=\"unsupported consensus engine\" ERROR[11-26|14:59:18.889] Failed to create Parity chain spec err=\"unsupported consensus engine\" INFO [11-26|14:59:18.890] Saved genesis chain spec client=harmony path=test-harmony.json ","date":"2019-09-05","objectID":"/posts/geth-poa%E8%81%94%E7%9B%9F%E9%93%BE%E6%90%AD%E5%BB%BA/:1:3","tags":["deploy","geth"],"title":"Geth POA联盟链搭建","uri":"/posts/geth-poa%E8%81%94%E7%9B%9F%E9%93%BE%E6%90%AD%E5%BB%BA/"},{"categories":["ethereum"],"content":"私链搭建 加载配置 geth --datadir node-1/data init test.json geth --datadir node-2/data init test.json geth --datadir node-3/data init test.json 启动区块链 geth --datadir ./node-1/data/ --port 1185 geth --datadir ./node-2/data/ --port 1186 geth --datadir ./node-3/data/ --port 1187 [root@google01 private-POA-chian]# screen -ls There are screens on: 4439.node-3 (Detached) 4397.node-2 (Detached) 4298.node-1 (Detached) 节点建立通信 登录node-1,获取节点信息 [root@google01 private-POA-chian]# geth attach ipc:node-1/data/geth.ipc Welcome to the Geth JavaScript console! instance: Geth/v1.10.12-stable-6c4dc6c3/linux-amd64/go1.17.2 coinbase: 0x88b34c24e8f727b44c17065a26b76bc31cf2c029 at block: 0 (Fri Nov 26 2021 14:48:33 GMT+0800 (CST)) datadir: /home/fqc/projects/blockchain/ethereum/private-POA-chian/node-1/data modules: admin:1.0 clique:1.0 debug:1.0 eth:1.0 miner:1.0 net:1.0 personal:1.0 rpc:1.0 txpool:1.0 web3:1.0 To exit, press ctrl-d or type exit \u003e \u003e admin.nodeInfo.enode \"enode://567c2b4de752396bab3fee6d2f31fb705c1a3b40f929cc4852961b5ddd15ad47c580ee2cb35a596351e125c8210c345aee19b104e5b66596c108c24ac9cb3329@115.29.190.53:1185\" 登录node-2、node-3建立peer通信 admin.addPeer(\"enode://567c2b4de752396bab3fee6d2f31fb705c1a3b40f929cc4852961b5ddd15ad47c580ee2cb35a596351e125c8210c345aee19b104e5b66596c108c24ac9cb3329@127.0.0.1:1185\") 登录node-1确定是否成功 \u003e net.peerCount \u003e admin.peers 测试 登录node-1，查询账户余额 \u003e web3.fromWei(eth.getBalance(eth.accounts[0]),'ether') 9.04625697166532776746648320380374280103671755200316906558262375061821325312e+56 转账交易 \u003e personal.unlockAccount(eth.accounts[0]) Unlock account 0x88b34c24e8f727b44c17065a26b76bc31cf2c029 Passphrase: true \u003e eth.sendTransaction({from:eth.accounts[0], to:\"241f173D632C57773B552953Fe1f2821d24BE072\", value:20000}) \"0x8216e70d056ff0e02701d75b0059489eb7b293128b8a19ae393590b5b05a7281\" 查询交易。可以看到区块还未打包，因此需要开启挖矿节点 \u003e eth.getTransaction(\"0xa86e66aa6b9b35672f0f9d235d258b681a13e03b232a97c6e994db7167f8f1e6\") { blockHash: null, blockNumber: null, from: \"0x88b34c24e8f727b44c17065a26b76bc31cf2c029\", gas: 21000, gasPrice: 1000000000, hash: \"0xa86e66aa6b9b35672f0f9d235d258b681a13e03b232a97c6e994db7167f8f1e6\", input: \"0x\", nonce: 4, r: \"0x46ed1d6d2c8f28e5db451d061303051aca58470a1ed4126e95e5af58345d1bc7\", s: \"0x5a722e13a7524a8e0ca4ae4c75b3619575da921ece96bde2702c7cb720117383\", to: \"0x241f173d632c57773b552953fe1f2821d24be072\", transactionIndex: null, type: \"0x0\", v: \"0x41\", value: 1e+66 } \u003e txpool.status #查看交易状态 { pending: 6, queued: 0 } 启动挖矿 miner.start() eth.hashrate #查看挖矿状态 ","date":"2019-09-05","objectID":"/posts/geth-poa%E8%81%94%E7%9B%9F%E9%93%BE%E6%90%AD%E5%BB%BA/:1:4","tags":["deploy","geth"],"title":"Geth POA联盟链搭建","uri":"/posts/geth-poa%E8%81%94%E7%9B%9F%E9%93%BE%E6%90%AD%E5%BB%BA/"},{"categories":["Web3"],"content":" 原文链接：https://future.a16z.com/why-web3-matters/ 作者：Chris Dixon 翻译：https://github.com/7Levy Web1（约为1990-2005）是一种关于非中心化和社区治理的开放协议。其绝大部分价值都集中在边缘网络—用户及构建者。 Web2（约为2005-2000）是由企业运营的孤立、去中心的服务。绝大部分的价值由谷歌、苹果、亚马逊、脸书等屈指可数的公司拥有。 我们现在正处于Web3的萌芽时期，它将web1中去中心化、社区治理的理念和web2中先进且现代的功能相结合。 Web3是由构建者与用户共同拥有的互联网，由令牌编织而成。(译注：一句话概括就是价值互联网) 那么为什么Web3如此重要呢？ 首先，让我们来看看中心化平台的问题所在Why decentralization matters。 中心化平台遵循可预测的生命周期规律。最初，他们竭尽所能去招募用户和第三方，例如创建者、开发者和企业。 他们这么做是为了强化他们的网络效应。随着平台沿着S曲线上升，它们对用户及第三方的影响力稳步增长。 当平台到达顶峰后，他们与网络参与人群的关系，从正和走向零和。为了平台继续增长，需要去从用户中提取数据并与前合作者进行竞争。 关于这方面著名的例子有微软vs网景，谷歌vsYelp，脸书vsZynga，Twitter vs 第三方客户端，以及Epic vs 苹果。 对于第三方来说，从合作到竞争的过渡就像是一个引诱圈套。随着时间的推移，最优秀的一批企业级、研发者和投资者开始不在中心平台进行构建。这种现象抑制了创新。 回归正题，来谈谈web3。在web3中，所有权和控制权是去中心化的。用户和构建者可以通过代币（同质化和非同质化）来拥有部分互联网服务。 代币赋予用户财产权：拥有部分互联网的能力。 NFT让用户拥有自己的所有物，如艺术、照片、代码、音乐、文本、游戏、凭证、治理权、通行证等等人们梦寐以求的东西。 区块链作为一种特殊的计算机，任何人都可以访问，但没有人完全有用它。 以太坊以同质化代币作为动力，ETH，用于激励系统底层的物理机。ETH同事也是系统原生代币，用于交易，如购买NFT。 用户有很多途径可以购买同质化和非同质化代币。你可以购买，但也可以去赚取。 Uniswap协议因向早期用户空投15%治理代币而闻名。像这样的社区馈赠在web3中很普遍，作为一种建立信誉和激励采用的方式。 你可以通过创造和商业行为为获取代币。例如，人们每天售卖NFT赚取大约1亿美金。 代币使网络的参与者们共同努力朝同一个目标前进—网络的发展和代币的升值。 这种现象解决了中心化网络的核心问题，一家公司积累网络的价值，最终与它的用户和合作伙伴竞争。 在web3,之前，用户和构建者必须在web1有限的功能或者是web2团体和中心化的模式中选择。 Web3提供了一种新的方式，结合前时期最好的方面。现在是早期阶段，也是我们参与进入的最好时间。 ","date":"2021-11-27","objectID":"/posts/why-web3-matters/:0:0","tags":["translate","Web3","a16z"],"title":"Why Web3 Matters-为什么Web3如此重要？","uri":"/posts/why-web3-matters/"},{"categories":null,"content":" 专注、开放、包容、自由 币圈老韭菜一枚 区块链从业者 这里是我的博客-记录分享技术研究、市场研究、投资经验…. ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"关于我","uri":"/about/"}]